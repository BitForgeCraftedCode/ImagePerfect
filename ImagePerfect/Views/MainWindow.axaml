<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:ImagePerfect.ViewModels"
		xmlns:v="using:ImagePerfect.Views"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="ImagePerfect.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        Icon="/Assets/icons8-image-256.ico"
        Title="ImagePerfect">

    <Design.DataContext>
        <vm:MainWindowViewModel/>
    </Design.DataContext>

	<Grid ColumnDefinitions="*" RowDefinitions="Auto,Auto,Auto,Auto,Auto,Auto,Auto,Auto,Auto,Auto,Auto,Auto,Auto,*,Auto,Auto" x:Name="Root">
		<!--File Menu-->
		<StackPanel Grid.Row="0" Classes="menu-bg-color">
			<Menu>
				<MenuItem Header="_File">
					<MenuItem>
						<MenuItem.Template>
							<ControlTemplate>
								<Button Content="Import And Scan" Command="{Binding ToggleImportAndScanCommand}" Classes="main-btn" Width="200" />
							</ControlTemplate>
						</MenuItem.Template>
					</MenuItem>
					<MenuItem>
						<MenuItem.Template>
							<ControlTemplate>
								<Button Content="Exit" Command="{Binding ExitAppCommand}" Classes="main-btn" Width="200" />
							</ControlTemplate>
						</MenuItem.Template>
					</MenuItem>
				</MenuItem>
				<MenuItem Header="_Filters">
					<MenuItem>
						<MenuItem.Template>
							<ControlTemplate>
								<Button Content="Image Filters" Command="{Binding ToggleFiltersCommand}" CommandParameter="ImageFilters" Classes="main-btn" Width="200" />
							</ControlTemplate>
						</MenuItem.Template>
					</MenuItem>
					<MenuItem>
						<MenuItem.Template>
							<ControlTemplate>
								<Button Content="Image Date Filters" Command="{Binding ToggleFiltersCommand}" CommandParameter="ImageDateFilters" Classes="main-btn" Width="200" />
							</ControlTemplate>
						</MenuItem.Template>
					</MenuItem>
					<MenuItem>
						<MenuItem.Template>
							<ControlTemplate>
								<Button Content="Folder Filters" Command="{Binding ToggleFiltersCommand}" CommandParameter="FolderFilters" Classes="main-btn" Width="200" />
							</ControlTemplate>
						</MenuItem.Template>
					</MenuItem>
					<MenuItem>
						<MenuItem.Template>
							<ControlTemplate>
								<Button Content="Folder Alphabetical Filters" Command="{Binding ToggleFiltersCommand}" CommandParameter="FolderAlphabeticalFilters" Classes="main-btn" Width="200" />
							</ControlTemplate>
						</MenuItem.Template>
					</MenuItem>
				</MenuItem>
				<MenuItem Header="_Settings">
					<MenuItem>
						<MenuItem.Template>
							<ControlTemplate>
								<Button Content="Settings" Command="{Binding ToggleSettingsCommand}" Classes="main-btn" Width="200" />
							</ControlTemplate>
						</MenuItem.Template>
					</MenuItem>
					<MenuItem>
						<MenuItem.Template>
							<ControlTemplate>
								<Button Content="Total Images" Command="{Binding ToggleGetTotalImagesCommand}" Classes="main-btn" Width="200"/>
							</ControlTemplate>
						</MenuItem.Template>
					</MenuItem>
					<MenuItem>
						<MenuItem.Template>
							<ControlTemplate>
								<Button Content="Modify Tags" Command="{Binding ToggleListAllTagsCommand}" Classes="main-btn" Width="200" />
							</ControlTemplate>
						</MenuItem.Template>
					</MenuItem>
					<MenuItem>
						<MenuItem.Template>
							<ControlTemplate>
								<v:PickExternalImageViewerExeView DataContext="{Binding PickExternalImageViewerExe}"/>
							</ControlTemplate>
						</MenuItem.Template>
					</MenuItem>
				</MenuItem>
				<MenuItem Header="_File Management">
					<MenuItem>
						<MenuItem.Template>
							<ControlTemplate>
								<v:PickNewFoldersView DataContext="{Binding PickNewFolders}"/>
							</ControlTemplate>
						</MenuItem.Template>
					</MenuItem>
					<MenuItem>
						<MenuItem.Template>
							<ControlTemplate>
								<v:PickFoldersToExtractZipsView DataContext="{Binding PickZipFolders}" />
							</ControlTemplate>
						</MenuItem.Template>
					</MenuItem>
					<MenuItem>
						<MenuItem.Template>
							<ControlTemplate>
								<Button Content="Create New Folder" Command="{Binding ToggleCreateNewFolderCommand}" Classes="main-btn" Width="235" />
							</ControlTemplate>
						</MenuItem.Template>
					</MenuItem>
					<MenuItem>
						<MenuItem.Template>
							<ControlTemplate>
								<Button Content="Clear Favorite Folders" Command="{Binding RemoveAllFavoriteFoldersCommand}" Classes="main-btn" Width="235" />
							</ControlTemplate>
						</MenuItem.Template>
					</MenuItem>
					<MenuItem>
						<MenuItem.Template>
							<ControlTemplate>
								<Button Content="Manage Images" Command="{Binding ToggleManageImagesCommand}" Classes="main-btn" Width="235" />
							</ControlTemplate>
						</MenuItem.Template>
					</MenuItem>
				</MenuItem>
				<MenuItem Header="_Library Management">
					<MenuItem>
						<MenuItem.Template>
							<ControlTemplate>
								<v:PickRootFolderView DataContext="{Binding PickRootFolder}" x:Name="PickRootFolder"/>
							</ControlTemplate>
						</MenuItem.Template>
					</MenuItem>
					<MenuItem>
						<MenuItem.Template>
							<ControlTemplate>
								<Button Content="Delete Library" Command="{Binding DeleteLibraryCommand}" Classes="main-btn" Width="200" />
							</ControlTemplate>
						</MenuItem.Template>
					</MenuItem>
				</MenuItem>
			</Menu>
		</StackPanel>
		<!--Show All Tags-->
		<StackPanel Grid.Row="1" IsVisible="{Binding ToggleUI.ShowAllTags}" Classes="menu-bg-color">
			<ListBox x:Name="SelectedTag" Grid.Row="3" SelectionMode="Single" ItemsSource="{Binding TagsList}" Height="200" Width="500">
				<ListBox.ItemTemplate>
					<DataTemplate>
						<TextBlock Text="{Binding TagName}" HorizontalAlignment="Center"/>
					</DataTemplate>
				</ListBox.ItemTemplate>
			</ListBox>
			<Grid RowDefinitions="Auto,Auto" ColumnDefinitions="*" HorizontalAlignment="Center" IsEnabled="{Binding !#Root.((vm:MainWindowViewModel)DataContext).ShowLoading}">
				<StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="0">
					<Button Margin="5"
						ToolTip.Tip="Wil Remove The Selected Tag From All Images Across The Entire Database."
						Command="{Binding RemoveTagOnAllImagesCommand}" 
						CommandParameter="{Binding SelectedItem, ElementName=SelectedTag}"
						Classes="btn-danger">
						Remove Tag From All Images
					</Button>
					<Button Margin="5"
						ToolTip.Tip="Will Remove The Selected Tag From All Folders Across The Entire Database."
						Command="{Binding RemoveTagOnAllFoldersCommand}" 
						CommandParameter="{Binding SelectedItem, ElementName=SelectedTag}"
						Classes="btn-danger">
						Remove Tag From All Folders
					</Button>
				</StackPanel>
				<StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="0" HorizontalAlignment="Center">
					<Button Margin="5"
							ToolTip.Tip="Will Add The Selected Tag To All Folders In The Current Directory."
							Command="{Binding AddTagToAllFoldersInCurrentDirectoryCommand}"
							CommandParameter="{Binding SelectedItem, ElementName=SelectedTag}"
							Classes="btn-danger">
						Add Tag To All Folders In Directory
					</Button>
				</StackPanel>
			</Grid>
		</StackPanel>
		<!--Show Total Images-->
		<StackPanel Grid.Row="2" HorizontalAlignment="Stretch" IsVisible="{Binding ToggleUI.ShowTotalImages}" Classes="menu-bg-color">
			<Grid RowDefinitions="Auto" ColumnDefinitions="Auto,Auto" HorizontalAlignment="Center">
				<TextBlock Grid.Row="0" Grid.Column="0" Margin="5">Total Images: </TextBlock>
				<TextBlock Grid.Row="0" Grid.Column="1" Margin="5" Text="{Binding TotalImages,StringFormat='{}{0:0,0}'}"></TextBlock>
			</Grid>
		</StackPanel>
		<!--Folder Filters-->
		<StackPanel Grid.Row="3" Orientation="Vertical" IsVisible="{Binding ToggleUI.ShowFolderFilters}" Classes="menu-bg-color" IsEnabled="{Binding !#Root.((vm:MainWindowViewModel)DataContext).ShowLoading}">
			<Grid RowDefinitions="Auto, Auto, Auto" ColumnDefinitions="Auto, Auto, Auto, Auto" HorizontalAlignment="Center">
				<NumericUpDown Grid.Row="0" Grid.Column="0" Minimum="0" Value="10" Maximum="10" Width="200"
							   Margin="5" ParsingNumberStyle="Integer" FormatString="0"
							   x:Name="FilterFolderRating"/>
				<Button Grid.Row="0" Grid.Column="1" Margin="5" Width="200" HorizontalContentAlignment="Center"
						Command="{Binding FilterFoldersOnRatingCommand}"
						CommandParameter="{Binding #FilterFolderRating.Value}" Classes="menu-btn">
					Filter Folders on Rating
				</Button>

				<AutoCompleteBox Grid.Row="0" Grid.Column="2" Margin="5" FilterMode="StartsWith" Width="200"
								 ItemsSource="{Binding #Root.((vm:MainWindowViewModel)DataContext).TagsList}"
								 ValueMemberBinding="{Binding TagName}"
								 x:Name="FilterFolderTag"/>
				<Button Grid.Row="0" Grid.Column="3" Margin="5" Width="200" HorizontalContentAlignment="Center"
						Command="{Binding FilterFoldersOnTagCommand}"
						CommandParameter="{Binding #FilterFolderTag.Text}" Classes="menu-btn">
					Filter Folders on Tags
				</Button>

				<TextBox Grid.Row="1" Grid.Column="0" Margin="5" MaxLength="200" Width="200" x:Name="FilterFolderDescriptionText"/>
				<Button Grid.Row="1" Grid.Column="1" Margin="5" Width="200" HorizontalContentAlignment="Center"
						Command="{Binding FilterFoldersOnDescriptionCommand}"
						CommandParameter="{Binding #FilterFolderDescriptionText.Text}" Classes="menu-btn">
					Seach Folder Description
				</Button>

				<CheckBox Grid.Row="1" Grid.Column="2" Margin="5" Width="200" IsChecked="{Binding FilterInCurrentDirectory}">
					Filter in Current Directory
				</CheckBox>

				<NumericUpDown Grid.Row="2" Grid.Column="0" Minimum="0" Maximum="10" Width="200"
							   Margin="5" ParsingNumberStyle="Integer" FormatString="0"
							   Value="{Binding ExplorerVm.ComboFolderFilterRating}" />
				<AutoCompleteBox Grid.Row="2" Grid.Column="1" Margin="5" FilterMode="StartsWith" Width="200"
								 ItemsSource="{Binding #Root.((vm:MainWindowViewModel)DataContext).TagsList}"
								 ValueMemberBinding="{Binding TagName}"
								 Text="{Binding ExplorerVm.ComboFolderFilterTag}" />
				<Button Grid.Row="2" Grid.Column="2" Margin="5" Width="200" HorizontalContentAlignment="Center"
						Command="{Binding FilterFolderOnRatingAndTagCommand}"
						Classes="menu-btn">
					Filter On Rating And Tag
				</Button>
			</Grid>
			<Grid RowDefinitions="Auto, Auto" ColumnDefinitions="*, *" HorizontalAlignment="Center">
				<Button Grid.Row="0" Grid.Column="0" Margin="5" Width="300" HorizontalContentAlignment="Center"
						Command="{Binding GetAllFoldersWithNoImportedImagesCommand}" Classes="menu-btn">
					Get Folders With Images Not Imported
				</Button>
				<Button Grid.Row="0" Grid.Column="1" Margin="5" Width="300" HorizontalContentAlignment="Center"
						Command="{Binding GetAllFoldersWithMetadataNotScannedCommand}" Classes="menu-btn">
					Get Folders With Metadata Not Scanned
				</Button>
				<Button Grid.Row="1" Grid.Column="0" Margin="5" Width="300" HorizontalContentAlignment="Center"
						Command="{Binding GetAllFoldersWithoutCoversCommand}" Classes="menu-btn">
					Get Folders Without Covers
				</Button>
				<Button Grid.Row="1" Grid.Column="1" Margin="5" Width="300" HorizontalContentAlignment="Center"
						Command="{Binding LoadCurrentDirectoryCommand}" Classes="menu-btn">
					Load Current Directory
				</Button>
			</Grid>
		</StackPanel>
		<!--Image Filters-->
		<StackPanel Grid.Row="4" Orientation="Vertical" IsVisible="{Binding ToggleUI.ShowImageFilters}" Classes="menu-bg-color" IsEnabled="{Binding !#Root.((vm:MainWindowViewModel)DataContext).ShowLoading}">
			<Grid RowDefinitions="Auto" ColumnDefinitions="Auto, Auto, Auto, Auto" HorizontalAlignment="Center">
				<NumericUpDown Grid.Row="0" Grid.Column="0" Minimum="0" Value="5" Maximum="5" Width="200"
							   Margin="5" ParsingNumberStyle="Integer" FormatString="0"
							   x:Name="FilterImageRating"/>
				<Button Grid.Row="0" Grid.Column="1" Margin="5" Width="200" HorizontalContentAlignment="Center"
						Command="{Binding FilterImagesOnRatingCommand}"
						CommandParameter="{Binding #FilterImageRating.Value}" Classes="menu-btn">
					Filter Images on Rating
				</Button>
				
				<AutoCompleteBox Grid.Row="0" Grid.Column="2" Margin="5" FilterMode="StartsWith" Width="200"
								 ItemsSource="{Binding #Root.((vm:MainWindowViewModel)DataContext).TagsList}"
								 ValueMemberBinding="{Binding TagName}"
								 x:Name="FilterImageTag"/>
				<Button Grid.Row="0" Grid.Column="3" Margin="5" Width="200" HorizontalContentAlignment="Center"
						Command="{Binding FilterImagesOnTagCommand}"
						CommandParameter="{Binding #FilterImageTag.Text}" Classes="menu-btn">
					Filter Images on Tags
				</Button>
			</Grid>
			<Grid RowDefinitions="Auto" ColumnDefinitions="Auto, Auto" HorizontalAlignment="Center">
				<CheckBox Grid.Row="0" Grid.Column="0" Margin="5" IsChecked="{Binding FilterInCurrentDirectory}">
					Filter in Current Directory
				</CheckBox>
				<Button Grid.Row="0" Grid.Column="1" Margin="5"
						Command="{Binding LoadCurrentDirectoryCommand}" Classes="menu-btn">
					Load Current Directory
				</Button>
			</Grid>
		</StackPanel>
		<!--Image Date Filters-->
		<StackPanel Grid.Row="5" Orientation="Vertical" IsVisible="{Binding ToggleUI.ShowImageDateFilters}" Classes="menu-bg-color" IsEnabled="{Binding !#Root.((vm:MainWindowViewModel)DataContext).ShowLoading}">
			<Grid RowDefinitions="Auto" ColumnDefinitions="Auto, Auto, Auto, Auto" HorizontalAlignment="Center">
				<ComboBox x:Name="Years" Grid.Row="0" Grid.Column="0" ItemsSource="{Binding ImageDatesVm.Years}" Width="125" Margin="5" />
				<Button Grid.Row="0" Grid.Column="1" Margin="5" Classes="menu-btn"
						Command="{Binding FilterImagesOnYearCommand}"
						CommandParameter="{Binding SelectedItem, ElementName=Years}">
					Filter By Year
				</Button>
				<ComboBox x:Name="YearMonth" Grid.Row="0" Grid.Column="2" ItemsSource="{Binding ImageDatesVm.YearMonths}" Width="125" Margin="5" />
				<Button Grid.Row="0" Grid.Column="3" Classes="menu-btn"
						Command="{Binding FilterImagesOnYearMonthCommand}"
						CommandParameter="{Binding SelectedItem, ElementName=YearMonth}">
					Filter By Year And Month
				</Button>
			</Grid>
			<Grid RowDefinitions="Auto" ColumnDefinitions="Auto" HorizontalAlignment="Center">
				<StackPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Center">
					<DatePicker SelectedDate="{Binding ImageDatesVm.StartDate}" Margin="5"/>
					<TextBlock Text="to" VerticalAlignment="Center"/>
					<DatePicker SelectedDate="{Binding ImageDatesVm.EndDate}" Margin="5"/>
					<Button Classes="menu-btn" Margin="5"
							Command="{Binding FilterImagesOnDateRangeCommand}"
							CommandParameter="{Binding ImageDatesVm}">
						Filter On Range
					</Button>
				</StackPanel>
			</Grid>
			<Grid RowDefinitions="Auto" ColumnDefinitions="Auto, Auto, Auto" HorizontalAlignment="Center">
				<CheckBox Grid.Row="0" Grid.Column="0" Margin="5" IsChecked="{Binding FilterInCurrentDirectory}">
					Filter in Current Directory
				</CheckBox>
				<Button Grid.Row="0" Grid.Column="1" Margin="5"
						Command="{Binding LoadCurrentDirectoryCommand}" Classes="menu-btn">
					Load Current Directory
				</Button>
				<Button Grid.Row="0" Grid.Column="2" Margin="5" 
						Command="{Binding UpdateImageDatesCommand}" Classes="menu-btn">
					Refresh Available Dates
				</Button>
			</Grid>
		</StackPanel>
		<!--Settings-->
		<StackPanel Grid.Row="6" IsVisible="{Binding ToggleUI.ShowSettings}" Classes="menu-bg-color">
			<Grid RowDefinitions="Auto" ColumnDefinitions="Auto,Auto,Auto" Width="600" IsEnabled="{Binding !#Root.((vm:MainWindowViewModel)DataContext).ShowLoading}">
				<StackPanel Grid.Row="0" Grid.Column="0" Width="200">
					<TextBlock Margin="0 10 0 5">Pick Image Width</TextBlock>
					<TextBlock Margin="0 10 0 5" Text="{Binding SettingsVm.MaxImageWidth}" />
					<RadioButton GroupName="PickImageWidth" x:Name="ImageWidthSmall" Content="Small"
								 Command="{Binding PickImageWidthCommand}"
								 CommandParameter="{Binding #ImageWidthSmall.Content}"/>
					<RadioButton GroupName="PickImageWidth" x:Name="ImageWidthMedium" Content="Medium"
								 Command="{Binding PickImageWidthCommand}"
								 CommandParameter="{Binding #ImageWidthMedium.Content}"/>
					<RadioButton GroupName="PickImageWidth" x:Name="ImageWidthLarge" Content="Large"
								 Command="{Binding PickImageWidthCommand}"
								 CommandParameter="{Binding #ImageWidthLarge.Content}"/>
					<RadioButton GroupName="PickImageWidth" x:Name="ImageWidthXLarge" Content="XLarge"
								 Command="{Binding PickImageWidthCommand}"
								 CommandParameter="{Binding #ImageWidthXLarge.Content}"/>
					
					<NumericUpDown FormatString="0" Maximum="600" Minimum="400" Margin="5" Value="{Binding SettingsVm.MaxImageWidth}" x:Name="ImageWidthSelect" />
					<Button Command="{Binding SelectImageWidthCommand}" CommandParameter="{Binding #ImageWidthSelect.Value}" Classes="menu-btn">Save Selected Width</Button>
				</StackPanel>
				<StackPanel Grid.Row="0" Grid.Column="1" Width="200">
					<TextBlock Margin="0 10 0 5">Pick Folder Pagination Size</TextBlock>
					<TextBlock Margin="0 10 0 5" Text="{Binding SettingsVm.FolderPageSize}"/>
					<RadioButton GroupName="PickFolderPaginationSize" x:Name="FolderPagination20" Content="20"
								 Command="{Binding PickFolderPageSizeCommand}"
								 CommandParameter="{Binding #FolderPagination20.Content}"/>
					<RadioButton GroupName="PickFolderPaginationSize" x:Name="FolderPagination40" Content="40"
								 Command="{Binding PickFolderPageSizeCommand}"
								 CommandParameter="{Binding #FolderPagination40.Content}"/>
					<RadioButton GroupName="PickFolderPaginationSize" x:Name="FolderPagination60" Content="60"
								 Command="{Binding PickFolderPageSizeCommand}"
								 CommandParameter="{Binding #FolderPagination60.Content}"/>
					<RadioButton GroupName="PickFolderPaginationSize" x:Name="FolderPagination80" Content="80"
								 Command="{Binding PickFolderPageSizeCommand}"
								 CommandParameter="{Binding #FolderPagination80.Content}"/>
					<RadioButton GroupName="PickFolderPaginationSize" x:Name="FolderPagination100" Content="100"
								 Command="{Binding PickFolderPageSizeCommand}"
								 CommandParameter="{Binding #FolderPagination100.Content}"/>
					<RadioButton GroupName="PickFolderPaginationSize" x:Name="FolderPagination125" Content="125"
								 Command="{Binding PickFolderPageSizeCommand}"
								 CommandParameter="{Binding #FolderPagination125.Content}"/>
					<RadioButton GroupName="PickFolderPaginationSize" x:Name="FolderPagination150" Content="150"
								 Command="{Binding PickFolderPageSizeCommand}"
								 CommandParameter="{Binding #FolderPagination150.Content}"/>
					<RadioButton GroupName="PickFolderPaginationSize" x:Name="FolderPagination175" Content="175"
								 Command="{Binding PickFolderPageSizeCommand}"
								 CommandParameter="{Binding #FolderPagination175.Content}"/>
					<RadioButton GroupName="PickFolderPaginationSize" x:Name="FolderPagination200" Content="200"
								 Command="{Binding PickFolderPageSizeCommand}"
								 CommandParameter="{Binding #FolderPagination200.Content}"/>
				</StackPanel>
				<StackPanel Grid.Row="0" Grid.Column="2" Width="200">
					<TextBlock Margin="0 10 0 5">Pick Image Pagination Size</TextBlock>
					<TextBlock Margin="0 10 0 5" Text="{Binding SettingsVm.ImagePageSize}"/>
					<RadioButton GroupName="PickImagePaginationSize" x:Name="ImagePagination20" Content="20"
								 Command="{Binding PickImagePageSizeCommand}"
								 CommandParameter="{Binding #ImagePagination20.Content}"/>
					<RadioButton GroupName="PickImagePaginationSize" x:Name="ImagePagination40" Content="40"
								 Command="{Binding PickImagePageSizeCommand}"
								 CommandParameter="{Binding #ImagePagination40.Content}"/>
					<RadioButton GroupName="PickImagePaginationSize" x:Name="ImagePagination60" Content="60"
								 Command="{Binding PickImagePageSizeCommand}"
								 CommandParameter="{Binding #ImagePagination60.Content}"/>
					<RadioButton GroupName="PickImagePaginationSize" x:Name="ImagePagination80" Content="80"
								 Command="{Binding PickImagePageSizeCommand}"
								 CommandParameter="{Binding #ImagePagination80.Content}"/>
					<RadioButton GroupName="PickImagePaginationSize" x:Name="ImagePagination100" Content="100"
								 Command="{Binding PickImagePageSizeCommand}"
								 CommandParameter="{Binding #ImagePagination100.Content}"/>
					<RadioButton GroupName="PickImagePaginationSize" x:Name="ImagePagination125" Content="125"
								 Command="{Binding PickImagePageSizeCommand}"
								 CommandParameter="{Binding #ImagePagination125.Content}"/>
					<RadioButton GroupName="PickImagePaginationSize" x:Name="ImagePagination150" Content="150"
								 Command="{Binding PickImagePageSizeCommand}"
								 CommandParameter="{Binding #ImagePagination150.Content}"/>
					<RadioButton GroupName="PickImagePaginationSize" x:Name="ImagePagination175" Content="175"
								 Command="{Binding PickImagePageSizeCommand}"
								 CommandParameter="{Binding #ImagePagination175.Content}"/>
					<RadioButton GroupName="PickImagePaginationSize" x:Name="ImagePagination200" Content="200"
								 Command="{Binding PickImagePageSizeCommand}"
								 CommandParameter="{Binding #ImagePagination200.Content}"/>
				</StackPanel>
			</Grid>
		</StackPanel>
		<!--Directory Options Always Visible Nav Panel-->
		<StackPanel Grid.Row="7" Classes="menu-bg-color">
			<Grid RowDefinitions="Auto" ColumnDefinitions="*" HorizontalAlignment="Center" IsEnabled="{Binding !#Root.((vm:MainWindowViewModel)DataContext).ShowLoading}">
				<StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="0">
					<!--
					<TextBlock Margin="5">Current Directory:</TextBlock>
					<TextBlock Margin="5" Text="{Binding CurrentDirectory}"/>
					-->
					<CheckBox ToolTip.Tip="Load Saved Directory From Cache" IsChecked="{Binding LoadSavedDirectoryFromCache}"></CheckBox>
					<Button Margin="5" Command="{Binding LoadSavedDirectoryCommand}" CommandParameter="{Binding #FoldersAndImagesScrollViewer}" Classes="menu-btn">
						<StackPanel Orientation="Horizontal" Spacing="5">
							<Image Width="18" Height="18" Source="avares://ImagePerfect/Assets/reload-button-green-icon.png"></Image>
							<Image Width="18" Height="18" Source="avares://ImagePerfect/Assets/pink-heart-icon.png"></Image>
							<Image Width="18" Height="18" Source="avares://ImagePerfect/Assets/computer-folder-dual-tone-icon.png"></Image>
						</StackPanel>
					</Button>
					<Button Margin="5" Command="{Binding BackFolderFromDirectoryOptionsPanelCommand}" Classes="menu-btn">
						<Image Width="18" Height="18" Source="avares://ImagePerfect/Assets/arrow-left-direction-green-icon.png"></Image>
					</Button>
					<Button Margin="5" Command="{Binding LoadCurrentDirectoryCommand}" Classes="menu-btn">
						<Image Width="18" Height="18" Source="avares://ImagePerfect/Assets/reload-button-green-icon.png"></Image>
					</Button>
					<Button Margin="5" Command="{Binding OpenCurrentDirectoryWithExplorerCommand}" Classes="menu-btn">
						<Image Width="18" Height="18" Source="avares://ImagePerfect/Assets/music-open-eject-button-green-icon.png"></Image>
					</Button>
					<Button Margin="5" Command="{Binding SaveDirectoryCommand}" CommandParameter="{Binding #FoldersAndImagesScrollViewer}" Classes="btn-danger">
						<StackPanel Orientation="Horizontal" Spacing="5">
							<Image Width="18" Height="18" Source="avares://ImagePerfect/Assets/pink-heart-icon.png"></Image>
							<Image Width="18" Height="18" Source="avares://ImagePerfect/Assets/computer-folder-dual-tone-icon.png"></Image>
						</StackPanel>
					</Button>
					<Button 
						Command="{Binding FilterFiveStarImagesInCurrentDirectoryCommand}"
						Margin="5" Classes="menu-btn"
						ToolTip.Tip="Gets All Five Star Images In Current Directory">
						<Button.CommandParameter>
							<sys:Decimal>5.00</sys:Decimal>
						</Button.CommandParameter>
						<StackPanel Orientation="Horizontal" Spacing="5">
							<TextBlock>5</TextBlock>
							<Image Width="18" Height="18" Source="avares://ImagePerfect/Assets/star_filled.png"></Image>
							<Image Width="18" Height="18" Source="avares://ImagePerfect/Assets/icons8-image-96.png"></Image>
						</StackPanel>
					</Button>
					<Button Command="{Binding FilterGetAllImagesInFolderAndSubFoldersCommand}" 
							Margin="5" Classes="menu-btn"
							ToolTip.Tip="Gets All Images In Current Directory">
						<StackPanel Orientation="Horizontal" Spacing="5">
							<TextBlock>All</TextBlock>
							<Image Width="18" Height="18" Source="avares://ImagePerfect/Assets/icons8-image-96.png"></Image>
							<TextBlock>In</TextBlock>
							<TextBlock>Sub</TextBlock>
							<Image Width="18" Height="18" Source="avares://ImagePerfect/Assets/computer-folder-dual-tone-icon.png"></Image>
						</StackPanel>
					</Button>
					<CheckBox ToolTip.Tip="Show Folders Ascending or Descending? Checked Is Ascending. Flag Does Not Apply To Filterd Results." IsChecked="{Binding LoadFoldersAscending}"></CheckBox>
				</StackPanel>
			</Grid>
		</StackPanel>
		<!--Folder Alphabetical Filters-->
		<StackPanel Grid.Row="8" Classes="menu-bg-color" IsVisible="{Binding ToggleUI.ShowFolderAlphabeticalFilters}">
			<Grid RowDefinitions="Auto" ColumnDefinitions="*" HorizontalAlignment="Center" IsEnabled="{Binding !#Root.((vm:MainWindowViewModel)DataContext).ShowLoading}">
				<StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="0">
					<Button Command="{Binding FilterFoldersInCurrentDirectoryByStartingLetterCommand}" CommandParameter="A" Classes="menu-btn">A</Button>
					<Button Command="{Binding FilterFoldersInCurrentDirectoryByStartingLetterCommand}" CommandParameter="B" Classes="menu-btn">B</Button>
					<Button Command="{Binding FilterFoldersInCurrentDirectoryByStartingLetterCommand}" CommandParameter="C" Classes="menu-btn">C</Button>
					<Button Command="{Binding FilterFoldersInCurrentDirectoryByStartingLetterCommand}" CommandParameter="D" Classes="menu-btn">D</Button>
					<Button Command="{Binding FilterFoldersInCurrentDirectoryByStartingLetterCommand}" CommandParameter="E" Classes="menu-btn">E</Button>
					<Button Command="{Binding FilterFoldersInCurrentDirectoryByStartingLetterCommand}" CommandParameter="F" Classes="menu-btn">F</Button>
					<Button Command="{Binding FilterFoldersInCurrentDirectoryByStartingLetterCommand}" CommandParameter="G" Classes="menu-btn">G</Button>
					<Button Command="{Binding FilterFoldersInCurrentDirectoryByStartingLetterCommand}" CommandParameter="H" Classes="menu-btn">H</Button>
					<Button Command="{Binding FilterFoldersInCurrentDirectoryByStartingLetterCommand}" CommandParameter="I" Classes="menu-btn">I</Button>
					<Button Command="{Binding FilterFoldersInCurrentDirectoryByStartingLetterCommand}" CommandParameter="J" Classes="menu-btn">J</Button>
					<Button Command="{Binding FilterFoldersInCurrentDirectoryByStartingLetterCommand}" CommandParameter="K" Classes="menu-btn">K</Button>
					<Button Command="{Binding FilterFoldersInCurrentDirectoryByStartingLetterCommand}" CommandParameter="L" Classes="menu-btn">L</Button>
					<Button Command="{Binding FilterFoldersInCurrentDirectoryByStartingLetterCommand}" CommandParameter="M" Classes="menu-btn">M</Button>
					<Button Command="{Binding FilterFoldersInCurrentDirectoryByStartingLetterCommand}" CommandParameter="N" Classes="menu-btn">N</Button>
					<Button Command="{Binding FilterFoldersInCurrentDirectoryByStartingLetterCommand}" CommandParameter="O" Classes="menu-btn">O</Button>
					<Button Command="{Binding FilterFoldersInCurrentDirectoryByStartingLetterCommand}" CommandParameter="P" Classes="menu-btn">P</Button>
					<Button Command="{Binding FilterFoldersInCurrentDirectoryByStartingLetterCommand}" CommandParameter="Q" Classes="menu-btn">Q</Button>
					<Button Command="{Binding FilterFoldersInCurrentDirectoryByStartingLetterCommand}" CommandParameter="R" Classes="menu-btn">R</Button>
					<Button Command="{Binding FilterFoldersInCurrentDirectoryByStartingLetterCommand}" CommandParameter="S" Classes="menu-btn">S</Button>
					<Button Command="{Binding FilterFoldersInCurrentDirectoryByStartingLetterCommand}" CommandParameter="T" Classes="menu-btn">T</Button>
					<Button Command="{Binding FilterFoldersInCurrentDirectoryByStartingLetterCommand}" CommandParameter="U" Classes="menu-btn">U</Button>
					<Button Command="{Binding FilterFoldersInCurrentDirectoryByStartingLetterCommand}" CommandParameter="V" Classes="menu-btn">V</Button>
					<Button Command="{Binding FilterFoldersInCurrentDirectoryByStartingLetterCommand}" CommandParameter="W" Classes="menu-btn">W</Button>
					<Button Command="{Binding FilterFoldersInCurrentDirectoryByStartingLetterCommand}" CommandParameter="X" Classes="menu-btn">X</Button>
					<Button Command="{Binding FilterFoldersInCurrentDirectoryByStartingLetterCommand}" CommandParameter="Y" Classes="menu-btn">Y</Button>
					<Button Command="{Binding FilterFoldersInCurrentDirectoryByStartingLetterCommand}" CommandParameter="Z" Classes="menu-btn">Z</Button>
				</StackPanel>
			</Grid>
		</StackPanel>
		<!--Create New Folder-->
		<StackPanel Grid.Row="9" IsVisible="{Binding ToggleUI.ShowCreateNewFolder}" IsEnabled="{Binding !#Root.((vm:MainWindowViewModel)DataContext).ShowLoading}" Classes="menu-bg-color">
			<TextBlock Margin="0 5" MaxWidth="400">Create A New Folder:</TextBlock>
			<TextBox  Watermark="Enter folder name" MaxWidth="400" Text="{Binding CreateNewFolder.NewFolderName}" />
			<Button
				Margin="0 10 10 10"
				HorizontalAlignment="Center"
				Command="{Binding CreateNewFolderCommand}"
				IsEnabled="{Binding CreateNewFolder.IsNewFolderEnabled}"
				Classes="menu-btn">
				Create Folder
			</Button>
		</StackPanel>
		<!--Manage Images-->
		<StackPanel Grid.Row="10" IsVisible="{Binding ToggleUI.ShowManageImages}" IsEnabled="{Binding !#Root.((vm:MainWindowViewModel)DataContext).ShowLoading}" Classes="menu-bg-color">
			<Grid RowDefinitions="Auto" ColumnDefinitions="*" HorizontalAlignment="Center">
				<StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="0">
					<Button Margin="5" HorizontalAlignment="Center"
					Click="SelectAllButton_Click"
					Classes="menu-btn">
						Select All
					</Button>
					<Button Margin="5" HorizontalAlignment="Center" Classes="menu-btn"
							Command="{Binding MoveSelectedImagesUpOneDirectoryCommand}"
							CommandParameter="{Binding #ImagesListBox.SelectedItems}">
						Move Selected Up One Directory
					</Button>
					<!-- NOTE: Tag is bound to SelectedImages from ImagesListBox. refactor to StyledPropery later-->
					<v:PickImageMoveToFolderView DataContext="{Binding #Root.((vm:MainWindowViewModel)DataContext).PickImageMoveToFolder}" 
												 Tag="{Binding SelectedItems, ElementName=ImagesListBox}"/>
					<Button Margin="5" HorizontalAlignment="Center"
						Command="{Binding MoveSelectedImagesToTrashCommand}"
						CommandParameter="{Binding #ImagesListBox.SelectedItems}"
						Classes="btn-danger">
						Trash Selected
					</Button>
					<CheckBox IsChecked="{Binding SuppressImageRefresh}">On Trash Suppress Image Refresh</CheckBox>
				</StackPanel>
			</Grid>
		</StackPanel>
		<!--Import and Scan Folders-->
		<StackPanel Grid.Row="11" IsVisible="{Binding ToggleUI.ShowImportAndScan}" IsEnabled="{Binding !#Root.((vm:MainWindowViewModel)DataContext).ShowLoading}" Classes="menu-bg-color">
			<Grid RowDefinitions="Auto" ColumnDefinitions="*" HorizontalAlignment="Center">
				<StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="0">
					<Button Margin="5" HorizontalAlignment="Center"
					Command="{Binding ImportAllFoldersOnCurrentPageCommand}"
					CommandParameter="{Binding #FoldersItemsControl}"
					Classes="menu-btn">
						Import All Folders On Current Page
					</Button>
					<Button Margin="5" HorizontalAlignment="Center"
							Command="{Binding ScanAllFoldersOnCurrentPageCommand}"
							CommandParameter="{Binding #FoldersItemsControl}"
							Classes="menu-btn">
						Scan All Folders On Current Page
					</Button>
					<Button Margin="5" HorizontalAlignment="Center"
							Command="{Binding AddCoverImageOnCurrentPageCommand}"
							CommandParameter="{Binding #FoldersItemsControl}"
							Classes="menu-btn">
						Add Cover Image On Current Page
					</Button>
					<Button Margin="5" HorizontalAlignment="Center" ToolTip.Tip="Populates Folder Description With Text File In Folders"
							Command="{Binding GetFolderDescriptionFromTextFileOnCurrentPageCommand}"
							CommandParameter="{Binding #FoldersItemsControl}"
							Classes="menu-btn">
						Get Folder Text
					</Button>
					<CheckBox IsChecked="{Binding CopyFolderTextToParentFolder}" ToolTip.Tip="Also Copy Folder Text To Parent Folder"></CheckBox>
					<Button Margin="5" HorizontalAlignment="Center" ToolTip.Tip="Backs Up The Folder Description To A Text File In Folders"
							Command="{Binding BackUpFolderDescriptionToTextFileOnCurrentPageCommand}"
							CommandParameter="{Binding #FoldersItemsControl}"
							Classes="menu-btn">
						Back Up Folder Text
					</Button>
				</StackPanel>
			</Grid>
		</StackPanel>
		<!--Progress Bar-->
		<ProgressBar Grid.Row="12" Margin="10" IsIndeterminate="True" IsVisible="{Binding ShowLoading}"/>		
		<!--Folders and Images-->
		<ScrollViewer Grid.Row="13" x:Name="FoldersAndImagesScrollViewer" AllowAutoHide="False">
			<StackPanel>
				<ItemsControl ItemsSource="{Binding LibraryFolders}" x:Name="FoldersItemsControl">
					<ItemsControl.ItemsPanel>
						<ItemsPanelTemplate>
							<WrapPanel HorizontalAlignment="Center" />
						</ItemsPanelTemplate>
					</ItemsControl.ItemsPanel>
					<ItemsControl.ItemTemplate>
						<DataTemplate DataType="vm:FolderViewModel">
							<StackPanel Margin="1" x:Name="FoldersStackPanel">
								<StackPanel.ContextMenu>
									<ContextMenu IsEnabled="{Binding !#Root.((vm:MainWindowViewModel)DataContext).ShowLoading}">
										<MenuItem>
											<MenuItem.Template>
												<ControlTemplate>
													<Button Content="Move All Images In Folder Up One Directory"
															Command="{Binding #Root.((vm:MainWindowViewModel)DataContext).MoveAllImagesInFolderUpOneDirectoryCommand}"
															IsEnabled="{Binding !$parent[StackPanel].((vm:FolderViewModel)DataContext).IsRoot}"
															CommandParameter="{Binding}"
															Classes="main-btn"
															Width="320"/>
												</ControlTemplate>
											</MenuItem.Template>
										</MenuItem>
										<MenuItem>
											<MenuItem.Template>
												<ControlTemplate>
													<Button Content="Copy Cover Image To Containing Folder" 
															Command="{Binding #Root.((vm:MainWindowViewModel)DataContext).CopyCoverImageToContainingFolderCommand}"
															CommandParameter="{Binding}"
															Classes="main-btn"
															Width="320"/>
												</ControlTemplate>
											</MenuItem.Template>
										</MenuItem>
										<MenuItem>
											<MenuItem.Template>
												<ControlTemplate>
													<Button Content="Copy Folder Description To Containing Folder" 
															Command="{Binding #Root.((vm:MainWindowViewModel)DataContext).CopyFolderDescriptionToContainingFolderCommand}"
															CommandParameter="{Binding}"
															Classes="main-btn"
															Width="320"/>
												</ControlTemplate>
											</MenuItem.Template>
										</MenuItem>
										<MenuItem>
											<MenuItem.Template>
												<ControlTemplate>
													<v:PickFolderCoverImageView DataContext="{Binding #Root.((vm:MainWindowViewModel)DataContext).PickCoverImage}" />
												</ControlTemplate>
											</MenuItem.Template>
										</MenuItem>
										<MenuItem>
											<MenuItem.Template>
												<ControlTemplate>
													<v:PickMoveToFolderView DataContext="{Binding #Root.((vm:MainWindowViewModel)DataContext).PickMoveToFolder}" />
												</ControlTemplate>
											</MenuItem.Template>
										</MenuItem>
										<MenuItem>
											<MenuItem.Template>
												<ControlTemplate>
													<Button Content="Favorite"
															Command="{Binding #Root.((vm:MainWindowViewModel)DataContext).SaveFolderAsFavoriteCommand}"
															CommandParameter="{Binding}"
															Classes="main-btn"
															Width="320"/>
												</ControlTemplate>
											</MenuItem.Template>
										</MenuItem>
										<MenuItem>
											<MenuItem.Template>
												<ControlTemplate>
													<Button Content="Toggle Extended Folder Controls"
															Command="{Binding #Root.((vm:MainWindowViewModel)DataContext).ToggleShowExtendedFolderControlsCommand}"
															Classes="main-btn"
															Width="320"/>
												</ControlTemplate>
											</MenuItem.Template>
										</MenuItem>
										<MenuItem>
											<MenuItem.Template>
												<ControlTemplate>
													<Button Content="Trash"
															Command="{Binding #Root.((vm:MainWindowViewModel)DataContext).MoveFolderToTrashCommand}"
															CommandParameter="{Binding}"
															IsEnabled="{Binding !IsRoot}"
															Classes="btn-danger"
															Width="320"/>
												</ControlTemplate>
											</MenuItem.Template>
										</MenuItem>
									</ContextMenu>
								</StackPanel.ContextMenu>
								<SelectableTextBlock MaxWidth="{Binding #Root.((vm:MainWindowViewModel)DataContext).SettingsVm.MaxImageWidth}" Text="{Binding FolderName}"/>
								<Image MaxWidth="{Binding #Root.((vm:MainWindowViewModel)DataContext).SettingsVm.MaxImageWidth}" Source="{Binding CoverImageBitmap}" />
								<SelectableTextBlock HorizontalAlignment="Center"
										   TextWrapping="Wrap"
										   Text="{Binding FolderTags}"
										   IsVisible="{Binding !#Root.((vm:MainWindowViewModel)DataContext).ToggleUI.ShowExtendedFolderControls}"
										   MaxWidth="{Binding #Root.((vm:MainWindowViewModel)DataContext).SettingsVm.MaxImageWidth}" />
								<Grid RowDefinitions="Auto" ColumnDefinitions="Auto,Auto" HorizontalAlignment="Center">
									<Button
											Command="{Binding #Root.((vm:MainWindowViewModel)DataContext).AddFolderRatingCommand}"
											CommandParameter="{Binding}"
											Click="Folder_Rating_Zero"
											Background="Black"
											Grid.Row="0"
											Grid.Column="0">
										<Image Width="18" Height="18" Source="avares://ImagePerfect/Assets/DownArrowRed.png"></Image>
									</Button>
									<ItemsControl ItemsSource="{Binding Stars}" HorizontalAlignment="Center" Grid.Row="0" Grid.Column="1">
										<ItemsControl.ItemsPanel>
											<ItemsPanelTemplate>
												<StackPanel Orientation="Horizontal"/>
											</ItemsPanelTemplate>
										</ItemsControl.ItemsPanel>
										<ItemsControl.ItemTemplate>
											<DataTemplate>
												<Button
													Command="{Binding #Root.((vm:MainWindowViewModel)DataContext).AddFolderRatingCommand}"
													CommandParameter="{Binding #FoldersStackPanel.((vm:FolderViewModel)DataContext)}"
													Click="Folder_Star_Click"
													Background="Black">
													<Image Width="18" Height="18" Classes.FolderStarEmpty="{Binding !IsFilled}" Classes.FolderStarNotEmpty="{Binding IsFilled}">
														<Image.Styles>
															<Style Selector="Image.FolderStarEmpty">
																<Setter Property="Source" Value="avares://ImagePerfect/Assets/star_empty.png" />
															</Style>
															<Style Selector="Image.FolderStarNotEmpty">
																<Setter Property="Source" Value="avares://ImagePerfect/Assets/star_filled.png" />
															</Style>
														</Image.Styles>
													</Image>
												</Button>
											</DataTemplate>
										</ItemsControl.ItemTemplate>
									</ItemsControl>
								</Grid>
								<ScrollViewer MaxHeight="150" 
											  IsVisible="{Binding !#Root.((vm:MainWindowViewModel)DataContext).ToggleUI.ShowExtendedFolderControls}"
											  MaxWidth="{Binding #Root.((vm:MainWindowViewModel)DataContext).SettingsVm.MaxImageWidth}">
									<SelectableTextBlock TextWrapping="Wrap" Margin="5" Text="{Binding FolderDescription}" />
								</ScrollViewer>
								<Grid RowDefinitions="Auto" ColumnDefinitions="*,*,*" MaxWidth="{Binding #Root.((vm:MainWindowViewModel)DataContext).SettingsVm.MaxImageWidth}" IsEnabled="{Binding !#Root.((vm:MainWindowViewModel)DataContext).ShowLoading}">
									<Button Grid.Row="0" Grid.Column="0" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center" Margin="2" IsEnabled="{Binding !IsRoot}"
											Command="{Binding #Root.((vm:MainWindowViewModel)DataContext).BackFolderCommand}"
											CommandParameter="{Binding}" Classes="main-btn">
										Back
									</Button>
									<Button Grid.Row="0" Grid.Column="1" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center" Margin="2" IsEnabled="{Binding !ShowImportImagesButton}"
											Command="{Binding #Root.((vm:MainWindowViewModel)DataContext).NextFolderCommand}"
											CommandParameter="{Binding}" Classes="main-btn">
										Open
									</Button>
									<Button Grid.Row="0" Grid.Column="2" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center" Margin="2" IsEnabled="{Binding ShowImportImagesButton}"
										Command="{Binding #Root.((vm:MainWindowViewModel)DataContext).ImportImagesCommand}"
										CommandParameter="{Binding}" Classes="main-btn">
										Import Images
									</Button>
								</Grid>
								<!--
								<Grid RowDefinitions="Auto" ColumnDefinitions="*" MaxWidth="{Binding #Root.((vm:MainWindowViewModel)DataContext).SettingsVm.MaxImageWidth}" 
									  IsEnabled="{Binding !#Root.((vm:MainWindowViewModel)DataContext).ShowLoading}"
									  IsVisible="{Binding #Root.((vm:MainWindowViewModel)DataContext).ToggleUI.ShowExtendedFolderControls}">
									<Button Grid.Row="0" Grid.Column="0" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center" Margin="2"
											Command="{Binding #Root.((vm:MainWindowViewModel)DataContext).CopyCoverImageToContainingFolderCommand}"
											CommandParameter="{Binding}" Classes="main-btn">
										Copy Cover Image To Containing Folder
									</Button>
								</Grid>
								-->
								<Grid RowDefinitions="Auto" ColumnDefinitions="*,*" MaxWidth="{Binding #Root.((vm:MainWindowViewModel)DataContext).SettingsVm.MaxImageWidth}" 
									  IsEnabled="{Binding !#Root.((vm:MainWindowViewModel)DataContext).ShowLoading}" 
									  IsVisible="{Binding #Root.((vm:MainWindowViewModel)DataContext).ToggleUI.ShowExtendedFolderControls}">
									
									<Button Grid.Row="0" Grid.Column="0" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center" Margin="2"
											Command="{Binding #Root.((vm:MainWindowViewModel)DataContext).SaveFolderAsFavoriteCommand}"
											CommandParameter="{Binding}" Classes="main-btn">
										Favorite
									</Button>
									<Button Grid.Row="0" Grid.Column="1" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center" Margin="2" IsEnabled="{Binding !IsRoot}"
											Command="{Binding #Root.((vm:MainWindowViewModel)DataContext).MoveFolderToTrashCommand}"
											CommandParameter="{Binding}" Classes="btn-danger">
										Trash
									</Button>
								</Grid>
								<Grid RowDefinitions="Auto" ColumnDefinitions="*,*" MaxWidth="{Binding #Root.((vm:MainWindowViewModel)DataContext).SettingsVm.MaxImageWidth}" IsEnabled="{Binding !#Root.((vm:MainWindowViewModel)DataContext).ShowLoading}">
									<Button Grid.Row="0" Grid.Column="0" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center" Margin="2" IsVisible="{Binding AreImagesImported}"
											Command="{Binding #Root.((vm:MainWindowViewModel)DataContext).ScanFolderImagesForMetaDataCommand}"
											CommandParameter="{Binding}" Classes="main-btn">
										Scan Images For Metadata
									</Button>
									<TextBlock Grid.Row="0" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="2" IsVisible="{Binding FolderContentMetaDataScanned}">
										Image Metadata Scanned
									</TextBlock>
								</Grid>
								<Grid RowDefinitions="Auto,Auto,Auto" ColumnDefinitions="*,Auto" MaxWidth="{Binding #Root.((vm:MainWindowViewModel)DataContext).SettingsVm.MaxImageWidth}" IsEnabled="{Binding !#Root.((vm:MainWindowViewModel)DataContext).ShowLoading}">
									<TextBox Grid.Row="0" Grid.Column="0" Watermark="Add Description" Height="100" AcceptsReturn="True" TextWrapping="Wrap" 
											 Margin="5" 
											 MaxLength="3000" 
											 Text="{Binding FolderDescription}"
											 IsVisible="{Binding #Root.((vm:MainWindowViewModel)DataContext).ToggleUI.ShowExtendedFolderControls}"/>
									<Button Grid.Row="0" Grid.Column="1" Height="100" Padding="8,40,8,6" Width="100" HorizontalContentAlignment="Center"
											Command="{Binding #Root.((vm:MainWindowViewModel)DataContext).AddFolderDescriptionCommand}"
											CommandParameter="{Binding}"
											IsVisible="{Binding #Root.((vm:MainWindowViewModel)DataContext).ToggleUI.ShowExtendedFolderControls}"
											Classes="main-btn">
										Submit
									</Button>
									<TextBox Grid.Row="1" Grid.Column="0" Margin="5" MaxLength="2000" 
											 Text="{Binding FolderTags}"
											 IsVisible="{Binding #Root.((vm:MainWindowViewModel)DataContext).ToggleUI.ShowExtendedFolderControls}"/>
									<Button Grid.Row="1" Grid.Column="1" Width="100" HorizontalContentAlignment="Center"
											Command="{Binding #Root.((vm:MainWindowViewModel)DataContext).EditFolderTagsCommand}"
											CommandParameter="{Binding}"
											IsVisible="{Binding #Root.((vm:MainWindowViewModel)DataContext).ToggleUI.ShowExtendedFolderControls}"
											Classes="btn-danger">
										Remove Tag
									</Button>
									<AutoCompleteBox Grid.Row="2" Grid.Column="0" MaxLength="100" Margin="5" Watermark="Add A Tag" 
													 Text="{Binding NewTag}" 
													 FilterMode="StartsWith" 
													 ItemsSource="{Binding #Root.((vm:MainWindowViewModel)DataContext).TagsList}"
													 ValueMemberBinding="{Binding TagName}"/>
									<Button Grid.Row="2" Grid.Column="1" Width="100" HorizontalContentAlignment="Center"
											Command="{Binding #Root.((vm:MainWindowViewModel)DataContext).AddFolderTagsCommand}"
											CommandParameter="{Binding}" Classes="main-btn">
										Submit
									</Button>
								</Grid>					
							</StackPanel>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>
				
				<!--See code behind for SelectionChanged used to toggle VM IsSelected with ListBox Selection-->
				<ListBox ItemsSource="{Binding Images}" x:Name="ImagesListBox" 
						 SelectionMode="Multiple" 
						 KeyboardNavigation.TabNavigation="Continue"
						 SelectionChanged="ListBox_SelectionChanged">
					<ListBox.Styles>
						<Style Selector="ListBoxItem">
							<Setter Property="Padding" Value="0"/>
						</Style>
						<Style Selector="ListBox">
							<Setter Property="Background" Value="Black"/>
						</Style>
					</ListBox.Styles>
					<ListBox.ItemsPanel>
						<ItemsPanelTemplate>
							<WrapPanel HorizontalAlignment="Center" />
						</ItemsPanelTemplate>
					</ListBox.ItemsPanel>					
					<ListBox.ItemTemplate>
						<DataTemplate DataType="vm:ImageViewModel">
							<!--One way Bind ListBox IsSelected to VM IsSelected used for Select and unSelect all images method-->
							<ListBoxItem IsSelected="{Binding IsSelected}" x:Name="ImagesListBoxItem">
								<StackPanel Margin="1" KeyboardNavigation.TabNavigation="Continue">
									<StackPanel.ContextMenu>
										<ContextMenu IsEnabled="{Binding !#Root.((vm:MainWindowViewModel)DataContext).ShowLoading}">
											<MenuItem>
												<MenuItem.Template>
													<ControlTemplate>
														<Button Content="Toggle Extended Image Controls"
																Command="{Binding #Root.((vm:MainWindowViewModel)DataContext).ToggleShowExtendedImageControlsCommand}"
																Classes="main-btn"
																Width="250"/>
													</ControlTemplate>
												</MenuItem.Template>
											</MenuItem>
										</ContextMenu>
									</StackPanel.ContextMenu>
									<Image MaxWidth="{Binding #Root.((vm:MainWindowViewModel)DataContext).SettingsVm.MaxImageWidth}" Source="{Binding ImageBitmap}" />
									<!--See code behind-->
									<Grid RowDefinitions="Auto" ColumnDefinitions="Auto,Auto,Auto,Auto,Auto" HorizontalAlignment="Center">
										<Button
											Command="{Binding #Root.((vm:MainWindowViewModel)DataContext).BackFolderFromImageCommand}"
											CommandParameter="{Binding}"
											Grid.Row="0" 
											Grid.Column="0" 
											Background="Black"
											IsVisible="{Binding !#Root.((vm:MainWindowViewModel)DataContext).ToggleUI.ShowExtendedImageControls}">
											<Image Width="20" Height="20" Source="avares://ImagePerfect/Assets/previous-button-green-icon.png"></Image>
										</Button>
										<Button
											Command="{Binding #Root.((vm:MainWindowViewModel)DataContext).OpenImageInExternalViewerCommand}"
											CommandParameter="{Binding}"
											Grid.Row="0" 
											Grid.Column="1" 
											Background="Black"
											IsVisible="{Binding !#Root.((vm:MainWindowViewModel)DataContext).ToggleUI.ShowExtendedImageControls}">
											<Image Width="20" Height="20" Source="avares://ImagePerfect/Assets/music-open-eject-button-green-icon.png"></Image>
										</Button>
										<Button 
											Command="{Binding #Root.((vm:MainWindowViewModel)DataContext).AddImageRatingCommand}"
											CommandParameter="{Binding}"
											Click="Image_Rating_Zero"
											Background="Black" 
											Grid.Row="0" 
											Grid.Column="2">
											<Image Width="20" Height="20" Source="avares://ImagePerfect/Assets/DownArrowRed.png"></Image>
										</Button>
										
										<ItemsControl ItemsSource="{Binding Stars}" HorizontalAlignment="Center" Grid.Row="0" Grid.Column="3">
											<ItemsControl.ItemsPanel>
												<ItemsPanelTemplate>
													<StackPanel Orientation="Horizontal"/>
												</ItemsPanelTemplate>
											</ItemsControl.ItemsPanel>
											<ItemsControl.ItemTemplate>
												<DataTemplate>
													<Button
														Command="{Binding #Root.((vm:MainWindowViewModel)DataContext).AddImageRatingCommand}"
														CommandParameter="{Binding #ImagesListBoxItem.((vm:ImageViewModel)DataContext)}"
														Click="Star_Click"
														Background="Black">
														<Image Width="20" Height="20" Classes.Empty="{Binding !IsFilled}" Classes.NotEmpty="{Binding IsFilled}">
															<Image.Styles>
																<Style Selector="Image.Empty">
																	<Setter Property="Source" Value="avares://ImagePerfect/Assets/star_empty.png" />
																</Style>
																<Style Selector="Image.NotEmpty">
																	<Setter Property="Source" Value="avares://ImagePerfect/Assets/star_filled.png" />
																</Style>
															</Image.Styles>
														</Image>
													</Button>
												</DataTemplate>
											</ItemsControl.ItemTemplate>
										</ItemsControl>
										<Button
											Command="{Binding #Root.((vm:MainWindowViewModel)DataContext).MoveImageToTrashCommand}"
											CommandParameter="{Binding}"
											Grid.Row="0" 
											Grid.Column="4" 
											Background="Black"
											IsVisible="{Binding !#Root.((vm:MainWindowViewModel)DataContext).ToggleUI.ShowExtendedImageControls}">
											<Image Width="20" Height="20" Source="avares://ImagePerfect/Assets/red-trash-can-icon.png"></Image>
										</Button>
									</Grid>
									<SelectableTextBlock
										Text="{Binding ImageTags}"
										IsVisible="{Binding !#Root.((vm:MainWindowViewModel)DataContext).ToggleUI.ShowExtendedImageControls}"
										HorizontalAlignment="Center" 
										MaxWidth="{Binding #Root.((vm:MainWindowViewModel)DataContext).SettingsVm.MaxImageWidth}"/>
									<Grid RowDefinitions="Auto" ColumnDefinitions="*,*,*" MaxWidth="{Binding #Root.((vm:MainWindowViewModel)DataContext).SettingsVm.MaxImageWidth}" 
										  IsEnabled="{Binding !#Root.((vm:MainWindowViewModel)DataContext).ShowLoading}"
										  IsVisible="{Binding #Root.((vm:MainWindowViewModel)DataContext).ToggleUI.ShowExtendedImageControls}">
										<Button Grid.Row="0" Grid.Column="0" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center" Margin="2"
										Command="{Binding #Root.((vm:MainWindowViewModel)DataContext).BackFolderFromImageCommand}"
										CommandParameter="{Binding}" Classes="main-btn">
											Back
										</Button>
										<Button Grid.Row="0" Grid.Column="1" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center" Margin="2"
												Command="{Binding #Root.((vm:MainWindowViewModel)DataContext).OpenImageInExternalViewerCommand}"
												CommandParameter="{Binding}" Classes="main-btn">
											Open
										</Button>
										<Button Grid.Row="0" Grid.Column="2" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center" Margin="2"
												Command="{Binding #Root.((vm:MainWindowViewModel)DataContext).MoveImageToTrashCommand}"
												CommandParameter="{Binding}" Classes="btn-danger">
											Trash
										</Button>
									</Grid>
									<Grid RowDefinitions="Auto,Auto" ColumnDefinitions="*,Auto" MaxWidth="{Binding #Root.((vm:MainWindowViewModel)DataContext).SettingsVm.MaxImageWidth}" IsEnabled="{Binding !#Root.((vm:MainWindowViewModel)DataContext).ShowLoading}">
										<TextBox Grid.Row="0" Grid.Column="0" Margin="5" MaxLength="2000" 
												 Text="{Binding ImageTags}" 
												 IsVisible="{Binding #Root.((vm:MainWindowViewModel)DataContext).ToggleUI.ShowExtendedImageControls}"/>
										<Button Grid.Row="0" Grid.Column="1" Width="100" HorizontalContentAlignment="Center"
												Command="{Binding #Root.((vm:MainWindowViewModel)DataContext).EditImageTagsCommand}"
												CommandParameter="{Binding}"
												IsVisible="{Binding #Root.((vm:MainWindowViewModel)DataContext).ToggleUI.ShowExtendedImageControls}"
												Classes="btn-danger">
											Remove Tag
										</Button>
										<AutoCompleteBox Grid.Row="1" Grid.Column="0" MaxLength="100" Margin="5" Watermark="Add A Tag"
														 Text="{Binding NewTag}"
														 FilterMode="StartsWith"
														 ItemsSource="{Binding #Root.((vm:MainWindowViewModel)DataContext).TagsList}"
														 ValueMemberBinding="{Binding TagName}" />
										<Button Grid.Row="1" Grid.Column="1" Width="100" HorizontalContentAlignment="Center"
												Command="{Binding #Root.((vm:MainWindowViewModel)DataContext).AddImageTagsCommand}"
												CommandParameter="{Binding}" Classes="main-btn">
											Submit
										</Button>
									</Grid>
									<Grid  RowDefinitions="Auto" ColumnDefinitions="Auto,*,Auto" MaxWidth="{Binding #Root.((vm:MainWindowViewModel)DataContext).SettingsVm.MaxImageWidth}" 
										   IsEnabled="{Binding !#Root.((vm:MainWindowViewModel)DataContext).ShowLoading}"
										   IsVisible="{Binding #Root.((vm:MainWindowViewModel)DataContext).ToggleUI.ShowExtendedImageControls}">
										<NumericUpDown Value="{Binding ImageId}" IsVisible="False"/>
										<CheckBox Grid.Row="0" Grid.Column="0" Margin="5,0,0,0" IsChecked="{Binding ShowAddMultipleImageTags}"></CheckBox>
										<TextBlock Grid.Row="0" Grid.Column="1" VerticalAlignment="Center" IsVisible="{Binding !ShowAddMultipleImageTags}">Add Multiple Tags</TextBlock>
										<ListBox x:Name="SelectedTags" Grid.Row="0" Grid.Column="1" Margin="5" SelectionMode="Multiple" ItemsSource="{Binding #Root.((vm:MainWindowViewModel)DataContext).TagsList}" Height="150" IsVisible="{Binding ShowAddMultipleImageTags}">
											<ListBox.ItemTemplate>
												<DataTemplate>
													<TextBlock Text="{Binding TagName}" HorizontalAlignment="Center"/>
												</DataTemplate>
											</ListBox.ItemTemplate>
										</ListBox>
										<Button Grid.Row="0" Grid.Column="2" Width="100" HorizontalContentAlignment="Center" IsEnabled="{Binding ShowAddMultipleImageTags}"
												Command="{Binding #Root.((vm:MainWindowViewModel)DataContext).AddMultipleImageTagsCommand}"
												CommandParameter="{Binding #SelectedTags}" Classes="main-btn">
											Submit
										</Button>
									</Grid>
									<!--
									<Grid RowDefinitions="Auto" ColumnDefinitions="*,Auto" MaxWidth="{Binding #Root.((vm:MainWindowViewModel)DataContext).SettingsVm.MaxImageWidth}" IsEnabled="{Binding !#Root.((vm:MainWindowViewModel)DataContext).ShowLoading}">
										<NumericUpDown Grid.Row="0" Grid.Column="0" Maximum="5" Minimum="0" Margin="5" Value="{Binding ImageRating}"/>
										<Button Grid.Row="0" Grid.Column="1" Width="100" HorizontalContentAlignment="Center"
												Command="{Binding #Root.((vm:MainWindowViewModel)DataContext).AddImageRatingCommand}"
												CommandParameter="{Binding}" Classes="main-btn">
											Submit
										</Button>
									</Grid>
									-->
								</StackPanel>
							</ListBoxItem>
						</DataTemplate>
					</ListBox.ItemTemplate>
				</ListBox>
			</StackPanel>
		</ScrollViewer>
		<!--Pagination-->
		<StackPanel Grid.Row="14" Orientation="Vertical" HorizontalAlignment="Stretch" Classes="menu-bg-color">
			<Grid RowDefinitions="Auto" ColumnDefinitions="Auto, Auto, Auto, Auto, Auto" HorizontalAlignment="Center" IsEnabled="{Binding !#Root.((vm:MainWindowViewModel)DataContext).ShowLoading}">
				<Button Margin="5" Grid.Row="0" Grid.Column="0"
					Command="{Binding PreviousPageCommand}" Classes="menu-btn">
					Previous Page
				</Button>
				<Button Margin="5" Grid.Row="0" Grid.Column="1"
						Command="{Binding NextPageCommand}" Classes="menu-btn">
					Next Page
				</Button>
				<NumericUpDown Minimum="1" Maximum="{Binding ExplorerVm.MaxPage}" Grid.Row="0" Grid.Column="2" Width="150" Margin="5" Value="{Binding ExplorerVm.MaxCurrentPage}" x:Name="PageNumber" ParsingNumberStyle="Integer" FormatString="0"/>
				<Button HorizontalAlignment="Center" Margin="5" Grid.Row="0" Grid.Column="3"
						Command="{Binding GoToPageCommand}"
						CommandParameter="{Binding #PageNumber.Value}" Classes="menu-btn">
					Go To Page
				</Button>
				<Button HorizontalAlignment="Center" Margin="5" Grid.Row="0" Grid.Column="4" Command="{Binding GetAllFavoriteFoldersCommand}" Classes="menu-btn">
					Load Favorite Folders
				</Button>
			</Grid>
		</StackPanel>
		<StackPanel Grid.Row="15" HorizontalAlignment="Stretch"  Classes="menu-bg-color">
			<Grid RowDefinitions="Auto" ColumnDefinitions="Auto,Auto,Auto,Auto" HorizontalAlignment="Center" Margin="0 0 0 10">
				<Label Grid.Row="0" Grid.Column="0">Total Pages:</Label>
				<TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding ExplorerVm.MaxPage}" VerticalAlignment="Center"></TextBlock>
				<Label Grid.Row="0" Grid.Column="2">Current Page:</Label>
				<TextBlock Grid.Row="0" Grid.Column="3" Text="{Binding ExplorerVm.MaxCurrentPage}" VerticalAlignment="Center"></TextBlock>
			</Grid>
		</StackPanel>
	</Grid>
</Window>
